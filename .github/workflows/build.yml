name: Build and Publish Hymma.Solidworks

on:
  pull_request:
    branches:
    - '*' 
  push:
    branches:
    - master

env:
    NugetDirectory: ${{ github.workspace}}\nugets
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_NOLOGO: true

defaults:
  run:
    shell: pwsh


jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:

    - name: Setup dotnet
      uses: actions/setup-dotnet@v4

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: install MinVer CLI
      id: getVersion
      run: | 
          dotnet tool install --global minver-cli --version 5.0.0 

    - name : call Minver
      run: echo "minversion=$(minver)" >> "$GITHUB_OUTPUT"

    - name: Echo Min Version
      run: echo ${{ steps.getVersion.outputs.minversion}}

    - name: run minver
      id: version
      uses: thefringeninja/action-minver@2.0.0-preview1

    - name: output
      run: |
        echo ${{ steps.version.outputs.version }}

    - name: make nugets
      run: nuget pack nugetSpec.nuspec -OutputDirectory ../nugets -Version ${{ steps.version.outputs.version }} -Properties Configuration=Release -Symbols -SymbolPackageFormat snupkg

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
       vs-version: '[17.0,18.0)'

    - name: Run build
      run: msbuild hymma.solidworks.sln -restore -nologo -m -p:configuration=release -p:RestorePackagesConfig=true -p:BuildVersion=0.54 -p:AddinGuid='{2EB85AF6-DB51-46FB-B955-D4A7708DA315}' -p:Platform=X64 -p:IncludeSymbols=false -p:CreateNugetPackage=false

  test:
     needs: [build]
     runs-on: windows-latest
     steps:

     - name: runTest
       uses: microsoft/vstest-action@v1.0.0
       with:
         testAssembly: UnitTestProject.dll
         searchFolder: ${{github.workspace}}/UnitTestProject/bin/**/
         # runInParallel: true
         # codeCoverageEnabled: true
         testFiltercriteria: "Category!=Extensions"

  publish:
     if: github.repository_owner == 'HYMMA'
     needs: [test]
     runs-on: windows-latest
     steps:
  
     - name: Save Package
       uses: actions/upload-artifact@v4
       with:
         name: nugets 
         path: ${{ env.NuGetDirectory}}/*.*nupkg

     - name: Save Installer
       uses: actions/upload-artifact@v4
       with:
        name: QrifyInstaller
        path: ./**/Qrify/**/bin/**/*.msi

     - name: publish nuget
       run: |
            foreach($file in (Get-ChildItem "${{ env.NuGetDirectory}}" -Recurse -Include Hymma.Solidworks.*.*nupkg )){
            nuget push $file -ApiKey "${{ secrets.NUGET_APIKEY}}" -src https://api.nuget.org/v3/index.json -SkipDuplicate}
              