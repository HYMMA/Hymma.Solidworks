name: Build and Publish Hymma.Solidworks

on:
  pull_request:
    branches:
    - '*' 
  push:
    branches:
    - master

env:
    NugetDirectory: ${{ github.workspace}}\nugets
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
    DOTNET_NOLOGO: true

defaults:
  run:
    shell: pwsh


jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2
      with:
       vs-version: '[17.0,18.0)'

    # - name : make nugets
    #   run: |
    #       msbuild ./Addins.Fluent/Hymma.Solidworks.Addins.Fluen.csproj -t:CreateNugetPackage -p:IncludeSymbols=true -p:CreateNugetPackage=true
    #       msbuild ./Extensions/Hymma.solidworks.Extensions.csproj -t:CreateNugetPackage -p:IncludeSymbols=true -p:CreateNugetPackage=true
    #       msbuild ./Interop/Hymma.Solidworks.Interop.csproj -t:CreateNugetPackage -p:IncludeSymbols=true -p:CreateNugetPackage=true

    - name: Run build
      run: msbuild hymma.solidworks.sln -restore -nologo -m -p:configuration=release -p:RestorePackagesConfig=true -p:BuildVersion=0.54 -p:AddinGuid='{2EB85AF6-DB51-46FB-B955-D4A7708DA315}' -p:Platform=X64 -p:IncludeSymbols=true -p:CreateNugetPackage=true

  test:
     needs: [build]
     runs-on: windows-latest
     steps:

     - name: run tests
       run: vstest.console.exe {{github.workspace}}/UnitTestProject/bing/Release/UnitTestProject.dll /TestCaseFilter:"TestCategory=Framework"

     # - name: runTest
     #   uses: microsoft/vstest-action@v1.0.0
     #   with:
     #     testAssembly: UnitTestProject.dll
     #     searchFolder: ${{github.workspace}}/UnitTestProject/bin/**/
     #     # runInParallel: true
     #     # codeCoverageEnabled: true
     #     testFiltercriteria: "Category!=Extensions"

  publish:
     if: github.repository_owner == 'HYMMA'
     needs: [test]
     runs-on: windows-latest
     steps:
  
     - name: Save Package
       uses: actions/upload-artifact@v4
       with:
         name: nugets 
         path: ${{ env.NuGetDirectory}}/*.*nupkg

    # - name: Save Installer
    #   uses: actions/upload-artifact@v4
    #   with:
    #    name: QrifyInstaller
    #    path: ./**/Qrify/**/bin/**/*.msi

     # - name: publish nuget
     #   run: |
     #        foreach($file in (Get-ChildItem "${{ env.NuGetDirectory}}" -Recurse -Include Hymma.Solidworks.*.*nupkg )){
     #        nuget push $file -ApiKey "${{ secrets.NUGET_APIKEY}}" -src https://api.nuget.org/v3/index.json -SkipDuplicate}
              